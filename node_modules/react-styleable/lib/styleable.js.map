{"version":3,"sources":["../src/styleable.js"],"names":[],"mappings":";;;;;;;;;;;;kBAgCwB,S;;AAhCxB;;;;AACA;;;;AACA;;;;;;;;;;;;AAEA,SAAS,2BAAT,CAAqC,QAArC,EAA+C,UAA/C,EAA2D;AACzD,MAAM,WAAW,OAAO,IAAP,CAAY,QAAZ,CAAjB;AACA,MAAM,UAAU,OAAO,IAAP,CAAY,UAAZ,CAAhB;AACA,SAAO,SAAS,MAAT,CAAgB;AAAA,WAAQ,QAAQ,OAAR,CAAgB,IAAhB,MAA0B,CAAC,CAAnC;AAAA,GAAhB,CAAP;AACD;;AAED,SAAS,iBAAT,CAA2B,QAA3B,EAAqC,UAArC,EAAiD;AAC/C,SAAO,4BAA4B,QAA5B,EAAsC,UAAtC,EAAkD,MAAlD,IAA4D,CAAnE;AACD;;AAED,SAAS,gBAAT,CAA0B,UAA1B,EAAsC;AACpC,SAAO,cAAc,OAAO,IAAP,CAAY,UAAZ,EAAwB,MAAxB,GAAiC,CAAtD;AACD;;AAED,SAAS,kBAAT,CAA4B,QAA5B,EAAsC,UAAtC,EAAkD;AAChD,SAAO,iBAAiB,UAAjB,IAA+B,kBAAkB,QAAlB,EAA4B,UAA5B,CAA/B,GAAyE,IAAhF;AACD;;AAED,SAAS,OAAT,CAAiB,IAAjB,EAAuB;;AAErB,MAAI;AACF;AACD,GAFD,CAEE,OAAO,CAAP,EAAU;AACV,WAAO,KAAK,EAAE,OAAP,IAAkB,oCAAoC,IAApC,CAAyC,EAAE,OAA3C,CAAzB;AACD;AACD,SAAO,KAAP;AACD;;AAEc,SAAS,SAAT,CAAmB,UAAnB,EAA+B;AAC5C,MAAI,CAAC,UAAL,EACE,aAAa,EAAb;;AAEF,MAAI,QAAO,UAAP,yCAAO,UAAP,OAAsB,QAAtB,IAAkC,MAAM,OAAN,CAAc,UAAd,CAAtC,EACE,MAAM,IAAI,KAAJ,CAAU,oEAAV,CAAN;;AAEF,SAAO,SAAS,cAAT,CAAwB,kBAAxB,EAA4C;AAAA;;AACjD,QAAI,CAAC,QAAQ,kBAAR,CAAL,EAAkC;AAChC,UAAM,WAAW,SAAX,QAAW,CAAU,KAAV,EAAiB;AAChC,eAAO,gCACF,KADE;AAEL,4BACK,UADL,EAEK,MAAM,GAFX;AAFK,WAAP;AAOD,OARD;AASA,eAAS,YAAT,GAAwB,mBAAmB,YAA3C;AACA,eAAS,SAAT,GAAqB,mBAAmB,SAAxC;AACA,aAAO,QAAP;AACD,KAbD,MAeE;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,iCAUW;AACP,mCACE,mBAAmB,KAAK,KAAL,CAAW,GAA9B,EAAmC,UAAnC,CADF,EAEE,yIAFF,EAGE,4BAA4B,KAAK,KAAL,CAAW,GAAvC,EAA4C,UAA5C,CAHF,EAIE,OAAO,IAAP,CAAY,UAAZ,CAJF;AAMA,8BAAY,UAAZ,EAA2B,KAAK,KAAL,CAAW,GAAtC;AACD;AAlBH;AAAA;AAAA,iCAmBW;AACP,iBAAO,8BAAC,kBAAD,aAAoB,KAAI,SAAxB,IAAsC,KAAK,KAA3C,IAAkD,KAAK,KAAK,MAAL,EAAvD,IAAP;AACD;AArBH;;AAAA;AAAA,MAA+B,gBAAM,SAArC,UACS,WADT,kBACoC,8BAAe,kBAAf,CADpC,eAES,YAFT,gBAGO,mBAAmB,YAH1B;AAII,WAAK;AAJT,eAMS,SANT,gBAOO,mBAAmB,SAP1B;AAQI,WAAK,gBAAM,SAAN,CAAgB;AARzB;AAuBH,GAvCD;AAwCD","file":"styleable.js","sourcesContent":["import getDisplayName from './utils/get-display-name'\nimport invariant from 'invariant'\nimport React from 'react'\n\nfunction getSelectorsNotInStylesheet(cssProps, stylesheet) {\n  const propKeys = Object.keys(cssProps)\n  const cssKeys = Object.keys(stylesheet)\n  return propKeys.filter(prop => cssKeys.indexOf(prop) === -1)\n}\n\nfunction isPropsAnOverride(cssProps, stylesheet) {\n  return getSelectorsNotInStylesheet(cssProps, stylesheet).length <= 0\n}\n\nfunction hasDefinedStyles(stylesheet) {\n  return stylesheet && Object.keys(stylesheet).length > 0\n}\n\nfunction stylesAreOverrides(cssProps, stylesheet) {\n  return hasDefinedStyles(stylesheet) ? isPropsAnOverride(cssProps, stylesheet) : true\n}\n\nfunction isClass(Comp) {\n  // :( try/catch flow control -- want something better\n  try {\n    Comp()\n  } catch (e) {\n    return e && e.message && /Cannot call a class as a function/.test(e.message)\n  }\n  return false\n}\n\nexport default function styleable(stylesheet) {\n  if (!stylesheet)\n    stylesheet = {}\n\n  if (typeof stylesheet !== 'object' || Array.isArray(stylesheet))\n    throw new Error('stylesheet must be an object (eg, export object from a css module)')\n\n  return function decorateSource(DecoratedComponent) {\n    if (!isClass(DecoratedComponent)) {\n      const styledFn = function (props) {\n        return DecoratedComponent({\n          ...props,\n          css: {\n            ...stylesheet,\n            ...props.css\n          }\n        });\n      }\n      styledFn.defaultProps = DecoratedComponent.defaultProps\n      styledFn.propTypes = DecoratedComponent.propTypes\n      return styledFn\n    }\n    else\n      return class Styleable extends React.Component {\n        static displayName = `Styleable(${getDisplayName(DecoratedComponent)})`;\n        static defaultProps = {\n          ...DecoratedComponent.defaultProps,\n          css: {}\n        };\n        static propTypes = {\n          ...DecoratedComponent.propTypes,\n          css: React.PropTypes.object\n        };\n        getCss() {\n          invariant(\n            stylesAreOverrides(this.props.css, stylesheet),\n            'Expected \"this.props.css\" to provide only overrides to the given stylesheet.  Selectors \"%s\" not included in the stylesheet keys, \"%s\".',\n            getSelectorsNotInStylesheet(this.props.css, stylesheet),\n            Object.keys(stylesheet)\n          )\n          return { ...stylesheet, ...this.props.css }\n        }\n        render() {\n          return <DecoratedComponent ref=\"wrapped\" {...this.props} css={this.getCss()} />\n        }\n      }\n  }\n}\n"]}